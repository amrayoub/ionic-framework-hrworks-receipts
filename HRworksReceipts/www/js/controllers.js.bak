angular.module('starter.controllers', ['ionic'])

.controller('receiptCtrl', function ($scope, $localstorage, $filter, $state, $ionicPopup, $ionicModal, $timeout, $stateParams) {
	$scope.receiptKinds = $localstorage.getObjects('receiptKinds');
	$scope.kindsOfPayment = $localstorage.getObjects('kindsOfPayment');
	$scope.currencies = $localstorage.getObjects('currencies');
	$scope.form = {};
	$scope.form.date = $filter('date')(new Date(), 'yyyy-MM-dd');
	$scope.form.currency = $localstorage.getObjects('lastCurrency');
	$scope.form.kindOfPayment = ""
	$scope.form.receiptKind = "";
	$scope.form.amount = "0.00";
	if($stateParams.guid != "new") {
		$scope.form = $localstorage.getObject('receipts', $stateParams.guid);
	}
	$scope.changeit = function (val) {
		val = val.toString();
		var period = val.indexOf(".");
			if (period > -1) {
				val = val.substring(0, period) + val.substring(period + 1)
			}
			var len = val.length;
			while (len < 3) {
				val = "0" + val;
				len = val.length;
			}
			val = val.substring(0, len - 2) + "." + val.substring(len - 2, len);
			while (val.length > 4 && (val[0] == 0 || isNaN(val[0]))) {
				val = val.substring(1)
			}
			if (val[0] == ".") {
				val = "0" + val
			}
			$scope.form.amount = val;
	};
	$scope.generateGUID = function () {
		var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
				var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
				return v.toString(16);
			});
		return guid;
	};
	$scope.saveReceipt = function () {
		var error = 0;
		var errorMessage = "";
		if (!$scope.form.text) {
			error = 1;
			errorMessage = errorMessage + "" + "Bezeichnung<br>";
		}
		if (!$scope.form.amount) {
			error = 1;
			errorMessage = errorMessage + "" + "Betrag<br>";
		}
		if (!$scope.form.date) {
			error = 1;
			errorMessage = errorMessage + "" + "Datum<br>";
		}
		if (!$scope.form.receiptKind) {
			error = 1;
			errorMessage = errorMessage + "" + "Belegart<br>";
		}
		if (!$scope.form.kindOfPayment) {
			error = 1;
			errorMessage = errorMessage + "" + "Zahlungsart<br>";
		}
		if (!$scope.form.currency) {
			error = 1;
			errorMessage = errorMessage + "" + "Währung<br>";
		}
		if (error == 1) {
			$ionicPopup.alert({
				title : '<b>Folgende Eingaben fehlen oder sind fehlerhaft:</b>',
				content : errorMessage
			});
		} else {
			theReceipt = {
				text : $scope.form.text,
				amount : $scope.form.amount,
				date : $scope.form.date,
				receiptKind : $scope.form.receiptKind,
				kindOfPayment : $scope.form.kindOfPayment,
				currency : $scope.form.currency,
				timestamp : $filter('date')(new Date(), 'yyyy-MM-ddTHH:mm:ss.sssZ'),
			};
			if($stateParams.guid == "new") {
				theReceipt.guid = $scope.generateGUID();
				$localstorage.insertObject('receipts', theReceipt);
			} else {
				theReceipt.guid = $stateParams.guid;
				$localstorage.updateObject('receipts', theReceipt);
			}
			$localstorage.setObject('lastCurrency', $scope.form.currency);
			if ($scope.$viewHistory.backView != null) {
				$scope.$viewHistory.backView.go();
			}
		}
	};
	// Currencie Modal
	$ionicModal.fromTemplateUrl('currencies-modal.html', {
		scope : $scope,
		animation : 'slide-in-up'
	}).then(function (modal) {
		$scope.CurrenciesModal = modal;
	});
	$scope.data = {
		showListCurrencies : false,
		showListReceiptKinds : false,
		showListkindsOfPayment : false,
		searchQueryCurrencies : "",
		searchQueryReceiptKinds : "",
		searchQueryKindsOfPayment : ""
	};
	$scope.openCurrenciesModal = function () {
		$scope.CurrenciesModal.show();
		$timeout(function () {
			$scope.showListCurrencies = true;
		}, 300)
	};
	$scope.closeCurrenciesModal = function () {
		$scope.CurrenciesModal.hide();
	};
	$scope.type = true;
	$scope.setType = function (event) {
		if (angular.element(event.target).text() == "Favoriten") {
			$scope.type = true;
		} else {
			$scope.type = '';
		}
	};
	$scope.clearSearchCurrencies = function () {
		$scope.data.searchQueryCurrencies = '';
	};

	$scope.selectCurrency = function (currency) {
		$scope.form.currency = currency;
		$scope.closeCurrenciesModal();
	};
	// receiptKinds Modal
	$ionicModal.fromTemplateUrl('receiptKinds-modal.html', {
		scope : $scope,
		animation : 'slide-in-up'
	}).then(function (modal) {
		$scope.receiptKindsModal = modal;
	});

	$scope.openReceiptKindsModal = function () {
		$scope.receiptKindsModal.show();
		$timeout(function () {
			$scope.showListReceiptKinds = true;
		}, 100)
	};
	$scope.closeReceiptKindsModal = function () {
		$scope.receiptKindsModal.hide();
	};
	$scope.clearSearchReceiptKinds = function () {
		$scope.data.searchQueryReceiptKinds = '';
	};
	$scope.selectReceiptKind = function (receiptKind) {
		$scope.form.receiptKind = receiptKind;
			$scope.closeReceiptKindsModal();
	};
	// KindsOfPayment Modal
	$ionicModal.fromTemplateUrl('kindsOfPayment-modal.html', {
		scope : $scope,
		animation : 'slide-in-up'
	}).then(function (modal) {
		$scope.kindsOfPaymentModal = modal;
	});
	$scope.data = {};
	$scope.openKindsOfPaymentModal = function () {
		$scope.kindsOfPaymentModal.show();
		$timeout(function () {
			$scope.showListKindsOfPayment = true;
		}, 100)
	};
	$scope.closeKindsOfPaymentModal = function () {
		$scope.kindsOfPaymentModal.hide();
	};
	$scope.clearSearchKindsOfPayment = function () {
		$scope.data.searchQueryKindsOfPayment = '';
	};
	$scope.selectKindOfPayment = function (kindOfPayment) {
		$scope.form.kindOfPayment = kindOfPayment;
		$scope.closeKindsOfPaymentModal();
	};
})

.controller('receiptsCtrl', function ($scope, $localstorage, $ionicLoading, $location) {

	$scope.go = function (hash) {
		$location.path(hash);
	}
	$scope.receipts = $localstorage.getObjects('receipts');

	$scope.show = function () {
		$ionicLoading.show({
			template : 'Synchronisieren...',
			duration : '1000'
		});
	};
	$scope.hide = function () {
		$ionicLoading.hide();
	};
	$scope.removeReceipt = function (guid) {
		var x = $localstorage.getIndex('receipts', guid);
		$scope.receipts.splice(x, 1);
		$localstorage.removeObject('receipts', guid);
	};
})

.controller('settingsCtrl', function ($scope, $localstorage, $filter) {
	generateGUID = function () {
		var guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
				var r = Math.random() * 16 | 0,
				v = c == 'x' ? r : (r & 0x3 | 0x8);
				return v.toString(16);
			});
		return guid;
	};
	$scope.create100Receipts = function () {
		for (var i = 0; i < 100; i++) {
			$localstorage.insertObject('receipts', {
				text : 'Beleg' + i,
				amount : "123",
				date : '2012-03-04',
				receiptKind : { description : "Bewirtung 100%", id : "2", isBusinessEntertainment : false, isHotel : false},
				kindOfPayment : { description : "Amex Privat", id : "1" },
				currency : { description : "Euro", isPreferred: true, symbol: "EUR"},
				timestamp : $filter('date')(new Date(), 'yyyy-MM-ddTHH:mm:ss.sssZ'),
				guid : generateGUID()
			});
		}
	};
})

.controller('infosCtrl', function ($scope) {})

.controller('updateReceiptCtrl', function ($scope, $localstorage, $stateParams) {
	console.log($localstorage.getObject('receipts', $stateParams.guid));
});